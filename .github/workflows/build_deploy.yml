on:
  push:
    branches:
      - main

 

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - name: git-checkout
        uses: actions/checkout@v2 

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

 

      - name: Install all dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

 

      - name: Build
        run: |
          npm run build
          echo alexmiha.de > dest/CNAME

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: dest/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "Build: ({sha}) {msg}"

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to FTP
    needs: build
    steps:
      - name: git-checkout
        uses: actions/checkout@v2 
        with:
          fetch-depth: 0
          ref: gh-pages
          
      - name: Sync to FTP server
        uses: milanmk/actions-file-deployer@master
        with:
          remote-protocol: sftp
          remote-host: ${{ secrets.FTP_HOST }}
          remote-user: ${{ secrets.FTP_USER }}
          remote-password: ${{ secrets.FTP_PASSWORD }}
          remote-path: /prod
          remote-port: ${{ secrets.FTP_PORT }}
