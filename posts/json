{
    "version": "https://jsonfeed.org/version/1",
    "title": "AlexMiHa's Blog",
    "home_page_url": "https://alexmiha.de/posts",
    "feed_url": "https://alexmiha.de/posts/json",
    "description": "The RSS Feed focused on the blog content of the alexmiha.de website where I write silly posts.",
    "icon": "https://alexmiha.de/images/logo.jpg",
    "author": {
        "name": "Alex Hagl",
        "url": "https://alexmiha.de"
    },
    "items": [
        {
            "id": "https://alexmiha.de/posts/i-finally-switched-to-linux-and-you-should-too",
            "content_html": "<p>Sooo üëã,</p>\n<p>a month ago I finally made the switch to a Linux based operating system üêß.</p>\n<p>I was a Windows user since I got my first computer and played with the thought of switching to Linux every now and then. But the last few years this voice became louder and louder and now, finally, I made the big change üéà.</p>\n<h2><a name=\"section-the-microsoft-disaster\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-finally-switched-to-linux-and-you-should-too#section-the-microsoft-disaster\" ><span class=\"header-link\"></span></a>The Microsoft disaster</h2><p>For everyone active in the tech community this change does not come as a surprise. </p>\n<p>A few weeks ago, Microsoft announced their newest shenanigans - Microsoft Recall targeted for the new Copilot+ AI powered laptop. Recall is one of those products that sound really cool, but considering the current threat level in the tech community, this feature is an absolute no-go if distributed as closed source üò±.</p>\n<p>For those not familiar with Microsoft Recall yet, it enables the user to <strong>search through their activity on the computer using AI</strong>. If you know you have visited a website with a picture of a goose in the past, you can search for goose and Recall finds the program and website used at the time ü™ø. To achieve this, Recall periodically saves screenshots and metadata of the stuff you look at. This of course includes passwords, sensitive data like images or personal documents and all cat-picture websites you visit on your computer üß°üñ§.</p>\n<p>Microsoft claims that Recall saves the captured data <em>locally only</em> on the machine in an <em>encrypted</em> format. <strong>BUT</strong>, as this data can be accessed through Recall itself, the information on how to decrypt this data must also be stored locally. This means, that if the encryption cannot be avoided in other ways, a hacker which has access to your machine can just use Recall to search through this history, making you <strong>vulnerable</strong> to targeted <strong>ads</strong>, <strong>social engineering</strong>, <strong>ransom</strong>, <strong>identity theft</strong>, and much much more.</p>\n<p>It is good, that the data is stored locally - <em>FOR NOW</em>. In my opinion, and I&#39;m <a href=\"https://youtu.be/2-z-iwfPslI?si=j1Gj1CpZuXJry0wR&t=890\">not the only one with this concern</a>, this will definitly not stay this way, in the future this <em>WILL</em> be synced to the cloud or sent to a server for processing, due to the hardware requirements for such AI models.</p>\n<p>This feature is especially dangerous for kids, elders and other non-tech savvy users, because they cannot or do not want to grasp the <strong>major security implications</strong>.</p>\n<p>If any other company would release such an application, this would definitly be considered potential spyware üïµ.</p>\n<p>Thankfully, after the massive backlash Microsoft got from the IT-Security community, they delayed this feature until current flaws are fixed. But as it is standing now, it still will be coming! In my opinion, the trust to the Windows team of Microsoft is long gone and going forward I will try to avoid this operating system as much as possible.</p>\n<p><strong>So if you are reading this and know of any non-tech savvy users in your environment, PLEASE, warn them of this feature and help them disable it, when it arrives or even better help them switch to Linux (e.g Linux Mint). And if they answer &quot;I have nothing to hide&quot; they should definitely leave the front door of their house unlocked and open 24/7 as they have nothing to hide anyways.</strong></p>\n<blockquote>\n<p>Thanks For Coming To My TED Talk üôÉ</p>\n</blockquote>\n<h2><a name=\"section-i-don-t-use-arch-btw-\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-finally-switched-to-linux-and-you-should-too#section-i-don-t-use-arch-btw-\" ><span class=\"header-link\"></span></a>I don't use Arch, btw.</h2><p>Now, the important question: <em>What distribution will I be using?</em></p>\n<p>Many distributions have close to a <strong>religion-like following</strong> üò∂‚Äçüå´Ô∏è. For me, I wanted an operating system, that <strong>does not stand in my way of doing things</strong>. In the past I looked at <em>Ubuntu, Fedora and Linux Mint</em>. With those distros being very mainstream, I read, that there is a minimized chance of missing drivers or incompatibilities üöÄ.</p>\n<p>I&#39;ve heard from a few people that they really like the <em>Gnome window manager</em>, so I narrowed my selection to Ubuntu and Fedora. I then tried both distros in a virtual machine, which OS fits best to me and finally I stuck with <strong>Ubuntu</strong> üéâ.</p>\n<p>The vanilla Gnome experience in Fedora is nice but I like the custom Gnome and the dock in Ubuntu more.</p>\n<h2><a name=\"section-which-filesystem-is-best-\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-finally-switched-to-linux-and-you-should-too#section-which-filesystem-is-best-\" ><span class=\"header-link\"></span></a>Which filesystem is best?</h2><p>As the standard Windows file system <a href=\"https://en.wikipedia.org/wiki/NTFS\">NTFS</a> is <strong>proprietary and closed source</strong>, the existing Linux drivers for NTFS are community made and reverse engineered. The implementation is not based on a specification which means that there could be <strong>incompatibilities</strong> or even <strong>bugs</strong> ü™≤.</p>\n<p>Therefore, I went through my hard drives, deleted stuff I didn&#39;t need anymore, backed up files I wanted to save and reformated the drives to the <a href=\"https://en.wikipedia.org/wiki/Ext4\">ext4</a> filesystem.</p>\n<p>All of my drives except two. On one SSD, I cloned my Windows system drive, so I can have a dual boot setup if at any point I need to go back to my Windows installation. Additionally, I kept one 1 TB HDD on NTFS for Windows file storage.</p>\n<p>That leaves the rest of the drives and my M.2 NVME SSD free for my Ubuntu installation and storage space in <strong>ext4</strong> üéà.</p>\n<h2><a name=\"section-driver-i-hardly-know-her-\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-finally-switched-to-linux-and-you-should-too#section-driver-i-hardly-know-her-\" ><span class=\"header-link\"></span></a>Driver? I hardly know her!</h2><p>I&#39;ve heard a lot of horror stories of incompatibilities on Linux with basically everything.</p>\n<p><img  src=\"https://alexmiha.de/images/posts/a224cb67-e299-476f-a219-08d2db1d67f4.jpg\"  alt=\"Linux user sending an email meme\"></p>\n<p>But with current versions of Ubuntu (24.04 LTS) there were basically no problems yet üóø. My NVIDIA Graphics card and all of my Hardware worked out of the box and installing programs is as easy as on Windows.</p>\n<p>Even gaming works better than expected. These last few years, VALVE, the company behind the game platform Steam, invested a lot of time into a compatibility layer called Proton, which lets you play Windows only games on Linux as well.</p>\n<p>Of course there is the problem of some other software such as Adobe not being available on Linux. I haven&#39;t looked into WINE or Bottles yet, but in an emergency (which hasn&#39;t happened yet) I could just boot into Windows for that task. Meanwhile, I started getting used to using <a href=\"https://github.com/Diolinux/PhotoGIMP\">PhotoGIMP</a> as a replacement for Photoshop.</p>\n<h2><a name=\"section-conclusion\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-finally-switched-to-linux-and-you-should-too#section-conclusion\" ><span class=\"header-link\"></span></a>Conclusion</h2><p>I waited a very long time to finally make the switch to Linux Desktop and I&#39;m very happy with how everything works!</p>\n<p>I basically have all features I really need for my dev workflows and I&#39;m getting a lot of quality of life improvements, that come with the improved configurations possible on linux.</p>\n<p>Finally, even if this post seemed to basically hate on Microsoft, I actually really like the software Microsoft creates - limited to development software, of course.\nAs is quite obvious, I really love products such as .NET or VSCode and I&#39;m very thankful of the fusion of Xamarin and .NET, that I can still use the .NET and C# ecosystem on Linux to develop my Software.</p>\n<p>Aaaaaaand the compulsory neofetch screenshot:\n<img  src=\"https://alexmiha.de/images/posts/f1e39ffa-b36f-43ce-b098-5eda9ab293fd.webp\"  alt=\"Neofetch\"></p>\n",
            "url": "https://alexmiha.de/posts/i-finally-switched-to-linux-and-you-should-too",
            "title": "I switched to Linux and why you should too",
            "summary": "Here I share my reasons and experiences on switching my setup to run linux.",
            "image": "https://alexmiha.de//images/posts/f1e39ffa-b36f-43ce-b098-5eda9ab293fd.webp",
            "date_modified": "2024-07-03T00:00:00.000Z",
            "date_published": "2024-07-03T00:00:00.000Z",
            "author": {
                "name": "Alex Hagl",
                "url": "https://alexmiha.de"
            },
            "tags": []
        },
        {
            "id": "https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer",
            "content_html": "<p>We all know it and have experienced it - free time is a valuable resource ‚è≥. I&#39;m in the 6th semester of my computer science degree and have little to no time to work on my personal projects.</p>\n<p>With as little of time that is left from the stressful day-to-day life, it is important to maximize not only what actually gets done, but most importantly to have as much fun as possible and to learn something in the progress. üß†</p>\n<p>Today I have compiled a small list of tips and tricks I use daily to keep my learning journey running and to stay motivated developing software. üöÄ</p>\n<h2><a name=\"section-the-deadline-is-coming-\" class=\"anchor\"  href=\"https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer#section-the-deadline-is-coming-\" ><span class=\"header-link\"></span></a>The deadline is coming!</h2><p>16! I have 16 dead projects on my hard drive. And that is without the unfinished projects I have collected on GitHub üíÄ -  Why is that?</p>\n<p>When I compare my finished projects and most of my unfinished projects there is a clear difference between the two.</p>\n<p>Most of my finished projects were planned through. I have set myself specific goals to reach in a specific time frame. üèÅ</p>\n<blockquote>\n<p>You may have heard of SMART goals.</p>\n</blockquote>\n<p>SMART goals stand for goals that are <em>specific</em>, <em>measurable</em>, <em>achievable</em>, <em>relevant</em> and most importantly <em>time-bound</em>.</p>\n<p>Whenever I start a new project, I try my best to keep notes on the most important features I want to implement, a rough roadmap of development and how long I am committing my time to this project. I try to first define what I want out of this project and how it integrates into my ecosystem.</p>\n<p>With this I have automatic <em>&#39;scheduling&#39;</em> for my projects, on which project I will work on and when I can start new projects.</p>\n<blockquote>\n<p>And we both know working with a deadline is where most work gets done üëÄ</p>\n</blockquote>\n<h2><a name=\"section-collaborate-with-others\" class=\"anchor\"  href=\"https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer#section-collaborate-with-others\" ><span class=\"header-link\"></span></a>Collaborate with others</h2><p>Building projects with others significantly boosts your experience and motivation by a lot. I work well when collaborating with others as I know that they depend on me getting my work done. This boosts the motivation to put work into the project. üéà</p>\n<p><em>Collaborating with others</em> does not only mean contributing to open source here as many other people say you should do.</p>\n<p>Collaborating with others means starting some projects with a few friends. You don&#39;t even have to search for developers better than you. The senior-junior developer and mentoring mindset does make sense, especially when starting out. But building a project, where you are the &#39;senior developer&#39; does improve your engineering skills. What most people miss out on is learning how to properly <strong>start</strong> a project. When you &#39;lead&#39; your project team, you learn a lot of different skills like architecture, design patterns and choosing the right tools. Plus you learn a lot about project management and leading a team. </p>\n<p>Working on projects with other people helps me to stay motivated and not abandon another project to ‚ú®the bottom of my GitHub repo list‚ú®. </p>\n<h2><a name=\"section-learn-something-new\" class=\"anchor\"  href=\"https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer#section-learn-something-new\" ><span class=\"header-link\"></span></a>Learn something new</h2><p>When I choose projects to develop, a big factor in the decision is building something, which I will learn a lot from üí°</p>\n<p>I try to either explore and set my focus on a topic in software engineering or infrastructure that I want to improve in or to switch up my default tools and maybe use a different database or a different language. üîÄ</p>\n<p>That way, developing a web service for the thousandth time does not get boring but is another challenge in itself which results in a lot of motivation going to the project.</p>\n<h2><a name=\"section-keep-a-list\" class=\"anchor\"  href=\"https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer#section-keep-a-list\" ><span class=\"header-link\"></span></a>Keep a list</h2><p>When I was in my 4th and 5th year of learning programming I had a phase where I had no more projects to work on. I ran out of ideas on what to develop - I had no need for any more software.</p>\n<p>Nowadays, I have set myself the <em>simple</em> goal of building my own software ecosystem to use in my private homelab üë©‚Äçüíª.</p>\n<p>With such a goal, thousands of projects fall out:</p>\n<ul>\n<li>How can I authenticate to each service -&gt; Create an Identity Server üîê</li>\n<li>How can I manage my logs -&gt; Logging Software üìù</li>\n<li>Oh no, I have too many passwords -&gt; Password Manager üîí</li>\n<li>I want to sync my passwords ONLY in my local network -&gt; Distributed Database Design üíæ</li>\n</ul>\n<p>...and so on. I keep all of these ideas I have for expanding my ecosystem in a big list. If I want to start a new project I have a lot of ideas lined up in the queue.</p>\n<p>Working on a simple, defined and attractive goal of (in my example) hosting a private software ecosystem provided me with a lot of projects to build and a lot of lessons to learn.</p>\n<p>Many would say <em>&quot;Don&#39;t reinvent the wheel&quot;</em>, I say <em>&quot;Reinvent the wheel and learn something from it&quot;</em>. You will make errors, but you can compare your solutions to how others have solved the problem and for me, that is a lot of fun! üòÅ</p>\n<h2><a name=\"section-gotta-have-them-metrics\" class=\"anchor\"  href=\"https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer#section-gotta-have-them-metrics\" ><span class=\"header-link\"></span></a>Gotta have them metrics</h2><p>The final trick I use to stay motivated is to always track some kind of metric on how much I got done.</p>\n<p>For me, this is my GitHub contribution chart.</p>\n<blockquote>\n<p>I wouldn&#39;t say I&#39;m a competitive person. üê∑<br>\n~ Technoblade</p>\n</blockquote>\n<p>I like to look at my contribution chart and see <em>&quot;Oh cool, on this day I&#39;ve gotten to 50 commits!&quot;</em>. üöÄ It fires up my inner gamer and motivates me to maximize productivity based on my contribution chart.</p>\n<p>Of course, this is not the only metric you could use - in fact, it probably isn&#39;t the best either. You can use anything that keeps track of how much you have accomplished like completed tickets or something similar.</p>\n<h2><a name=\"section-last-words\" class=\"anchor\"  href=\"https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer#section-last-words\" ><span class=\"header-link\"></span></a>Last Words</h2><p>Those were a few of my tips and tricks on how I stay motivated to develop software.</p>\n<p>But always keep in mind: if something you do to force yourself to do more coding is too much for you and drains your motivation you can just try some other method.</p>\n<p>The main focus should always be fun - Having fun coding and creating software is the most important thing as a software engineer. üî•</p>\n",
            "url": "https://alexmiha.de/posts/how-to-keep-motivated-as-a-software-engineer",
            "title": "How to keep motivated as a software engineer",
            "summary": "Tips and tricks on how to set yourself goals and keep focused as a software engineer.",
            "image": "https://alexmiha.de//images/posts/5dac3df9-767e-4e2a-bff9-1f3210a27068.jpg",
            "date_modified": "2024-04-07T00:00:00.000Z",
            "date_published": "2024-04-07T00:00:00.000Z",
            "author": {
                "name": "Alex Hagl",
                "url": "https://alexmiha.de"
            },
            "tags": []
        },
        {
            "id": "https://alexmiha.de/posts/i-wrote-my-own-blogging-software",
            "content_html": "<blockquote>\n<p>&quot;<em>QWERTYUIOP.</em>&quot;</p>\n</blockquote>\n<p> ~ Ray Tomlinson - The first email message ever sent (probably)</p>\n<p>Hello there,</p>\n<p>I&#39;ve finally gotten around to writing the first blogpost on my website. Finally getting a use out of the blogging software I wrote exactly for this purpose ü•≥.</p>\n<p>In this post I will tell you something about <strong>my journey</strong> of writing this piece of software and my <strong>hurdles</strong> along the way! üëÄ</p>\n<h2><a name=\"section-static-sites-for-the-win\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-wrote-my-own-blogging-software#section-static-sites-for-the-win\" ><span class=\"header-link\"></span></a>Static sites for the win</h2><p>I thought long about what tech stack to use for this project.</p>\n<blockquote>\n<p><em>Do I want the maintainability of a full cms?</em> ‚öô</p>\n<p><em>Where do I want to host this?</em> üíª</p>\n<p><em>How complex do I want it to get?</em> ü§Ø</p>\n<p><em>What will I learn from this?</em> üß†</p>\n</blockquote>\n<p>Creating a full content management system is not easy. You have to manage your database, have a seperate backend running to access it, of course you need the frontend...</p>\n<p>That is a <strong>big</strong> hassle!</p>\n<p>I always gravitated towards the simplicity of static websites. Why should I build a complex infrastructure where none is needed?</p>\n<p>With static html, css and javascript you do not have the problem of updating dependencies, relying on a framework like angular or react and so on. üóΩ</p>\n<p>I know as software engineers we always try to use the newest and fanciest framework or library, but at what cost? You lose control over your DOM and have an absolute overkill of a project!</p>\n<p>But I didn&#39;t want to give away the power of a templating engine! The one <strong>major</strong> drawback of static sites is <strong>code duplication</strong>! You have to repeat your main layout in each and every file!</p>\n<p>So I saw the requirements and compromised to use a simple templating engine. </p>\n<p>I used a simple <code>express.js</code> server to dynamically serve my content with the <code>EJS</code> templating engine to build the view.</p>\n<p><em>But didn&#39;t I want an easy deployment? Now I have to run a webserver all over again!</em> ü§ê</p>\n<p>Using a templating engine is beneficial in development but loses its use case for static websites after deploying. Thats why I decided to <strong>compile</strong> my express application to static html in the deployment step!</p>\n<p>For this I first needed the main render function for a specific EJS view üöÄ</p>\n<pre><code class=\"language-js\">const renderPage = async (view, data) =&gt; {\n    return await ejs.renderFile(&#39;src/layout/layout.ejs&#39;, {\n        view: view,\n        body: await ejs.renderFile(`src/views/${view}.ejs`, data)\n    });\n}\n</code></pre>\n<p>With this function I just need to search the views folder, render all the files and save it in the ouput folder!</p>\n<pre><code class=\"language-js\">async function buildBlog() {\n    const posts = await loadPosts();\n    const tags = getUniqueTags(posts);\n\n    const postPromises = [];\n    await fs.mkdir(&#39;dest/posts/topics&#39;, {recursive: true});\n    postPromises.push(createTopic(posts, NO_FILTER, tags));\n    for(const tag of tags) {\n        postPromises.push(createTopic(posts, tag, tags));\n    }\n    for(const post of posts) {\n        postPromises.push(createPost(post));\n    }\n    await Promise.all(postPromises);\n}\n</code></pre>\n<p>This function retrieves all files from the posts folder and builds the filtered topic overview pages and the post pages itself. ‚öô</p>\n<pre><code class=\"language-js\">async function createPost(post) {\n    const html = await renderPage(&#39;blog/post&#39;, {post:post});\n    await fs.writeFile(`dest/posts/${post.filename}.html`, html);\n}\n\nasync function createTopic(posts, tag, tags) {\n    if(tag)\n        posts = posts.filter(e =&gt; e.tags.includes(tag));\n\n    const html = await renderPage(&#39;blog/posts&#39;, {posts:posts, allTags: tags, currentTag: tag});\n    if(tag) {\n        await fs.writeFile(`dest/posts/topics/${tag}.html`, html);\n    } else {\n        await fs.writeFile(`dest/posts/index.html`, html);\n    }\n}\n</code></pre>\n<p>Finally the pages can be rendered and written to the destination folder. üöÄ</p>\n<p>Building it by myself everytime I have changes, would be too much work. A <strong>github action</strong> is needed! üòã</p>\n<pre><code class=\"language-yaml\">on:\n  push:\n    branches:\n      - main\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    name: Build and Push\n    steps:\n      - name: git-checkout\n        uses: actions/checkout@v2\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v2\n        with:\n          node-version: &#39;18.x&#39;\n\n      - name: Install all dependencies\n        run: npm ci\n\n      - name: Build\n        run: npm run build\n\n      - name: Push\n        uses: s0/git-publish-subdir-action@develop\n        env:\n          REPO: self\n          BRANCH: gh-pages\n          FOLDER: dest/\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          MESSAGE: &quot;Build: ({sha}) {msg}&quot;\n</code></pre>\n<p>On every push, the website gets compiled to <strong>static html</strong> and gets pushed to another branch.</p>\n<p>This also solves how to add new content on a static system - Just make a commit to the repository, which also has the advantages of <strong>automated backups</strong>. ü•≥ </p>\n<p><code>Thanks Github!</code></p>\n<h2><a name=\"section-markdown-templates\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-wrote-my-own-blogging-software#section-markdown-templates\" ><span class=\"header-link\"></span></a>Markdown templates</h2><p>Writing blog posts in pure html is still too boring. It just has too much overhead!\n<strong>Markdown</strong> is a common interface that allows writing content in nearly plaintext. I&#39;m already compiling my website, so why can&#39;t I also add a markdown compilation step?</p>\n<p>Thankfully, there are a lot of libraries for compiling markdown to html ready to use. </p>\n<blockquote>\n<p><strong>The advantage of using the node ecosystem! üòÅ</strong></p>\n</blockquote>\n<pre><code class=\"language-js\">function parsePost(filename, rawPost) {\n    const lines = rawPost.split(&#39;\\n&#39;)\n\n    const parsedPost = new Post();\n    parsedPost.filename = filename;\n\n    parseMetadata(parsedPost, lines);\n\n    parsedPost.htmlContent = marked.parse(lines.join(&#39;\\n&#39;));\n    return parsedPost;\n} \n</code></pre>\n<p>Here, I am using the <a href=\"https://github.com/markedjs/marked\">marked.js</a> npm package to parse my markdown files to html. </p>\n<h2><a name=\"section-stealing-resources-from-github\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-wrote-my-own-blogging-software#section-stealing-resources-from-github\" ><span class=\"header-link\"></span></a>Stealing resources from GitHub</h2><p>I am a student. I am poor. I do not want to rent a server to host my application! üí∞üí∏</p>\n<p>That&#39;s another advantage of static html. You can basically <strong>host it anywhere you want</strong>! There are a lot of free providers, that serve your static files for you. ü§ë</p>\n<p>Here, I am using <code>GitHub Pages</code>. The deployment action already copies the compiled files into another branch. I can just point github pages to this branch and tell it to deploy it. üöÄ</p>\n<p>GitHub pages also offers the ability to serve the website with a <strong>custom domain</strong>. Thankfully I have one!</p>\n<p>Just add a <code>CNAME</code> dns record for your domain, that points to the github servers and add your domain in the repository settings. You can read more about this process in the <a href=\"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages\">GitHub docs</a>.</p>\n<h2><a name=\"section-why-you-should-not-write-your-own-blogging-software-\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-wrote-my-own-blogging-software#section-why-you-should-not-write-your-own-blogging-software-\" ><span class=\"header-link\"></span></a>Why you should not write your own blogging software!</h2><p>As the post title already says, you should not write your own blogging software!\nIt depends on what your goal is.</p>\n<blockquote>\n<p>Do you want to write blog posts?</p>\n<p>Do you want to write a blogging software?</p>\n</blockquote>\n<p>These are two very different goals. For me, I wanted to start writing blog posts, to learn more about writing and expressing myself.</p>\n<p>But of course you are reading this post, so I really wrote my own solution for this.</p>\n<p>If your goal is to just write blog posts, this is not the optimal path. You will get distracted by designing your system. You will forget to <strong>actually write blog posts</strong>.</p>\n<p>I opened the pull request for the blogging part of my website on <strong>January 25th</strong>. I just got to writing my first post on <strong>March 3rd</strong>!</p>\n<p>It was fun writing this piece of software, but if your endgoal really is just to write posts about things you find interesting, just do it and use some other tool!</p>\n<blockquote>\n<p>Getting started is always the hardest part!</p>\n</blockquote>\n<h2><a name=\"section-last-words\" class=\"anchor\"  href=\"https://alexmiha.de/posts/i-wrote-my-own-blogging-software#section-last-words\" ><span class=\"header-link\"></span></a>Last Words</h2><p>If you want to learn more about this project, visit my <a href=\"https://github.com/AlexMi-Ha/Website\">GitHub repo</a>.</p>\n<p>In the future, I will post on a wide range of topics. But do not take them as too serious. I just try to have fun and practice my writing skills a bit.</p>\n<p>In the end, I&#39;m just a random dude on the internet, who loves shitposting, programming, music and cooking.</p>\n",
            "url": "https://alexmiha.de/posts/i-wrote-my-own-blogging-software",
            "title": "I wrote my own blogging software, and why you should not!",
            "summary": "In this post I will talk about my journey and the hurdles I've had while creating my very own blogging software.",
            "image": "https://alexmiha.de//images/posts/8c8df23c-d702-43ed-b49a-e3597a085464.jpg",
            "date_modified": "2024-03-03T00:00:00.000Z",
            "date_published": "2024-03-03T00:00:00.000Z",
            "author": {
                "name": "Alex Hagl",
                "url": "https://alexmiha.de"
            },
            "tags": []
        }
    ]
}